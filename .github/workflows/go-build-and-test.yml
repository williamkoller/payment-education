name: Go Build, Test & Codecov

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

permissions:
  contents: read

jobs:
  build-and-test:
    name: Go ${{ matrix.go-version }} Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.25']

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Baixar dependências
        run: go mod tidy

      - name: Rodar build
        run: go build -v ./...

      - name: Rodar testes com cobertura
        run: |
          mkdir -p coverage
          go test -v -covermode=atomic -coverprofile=coverage/coverage_${{ matrix.go-version }}.out ./...

      - name: Corrigir paths no relatório de cobertura
        run: sed -i "s|$(pwd)/||g" coverage/coverage_${{ matrix.go-version }}.out

      - name: Exibir resumo de cobertura
        run: go tool cover -func=coverage/coverage_${{ matrix.go-version }}.out

      - name: Upload de cobertura (artefato)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.go-version }}
          path: coverage/coverage_${{ matrix.go-version }}.out

  upload-codecov:
    name: Upload para Codecov
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Baixar artefatos de cobertura
        uses: actions/download-artifact@v4
        with:
          path: coverage

      - name: Upload para Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: 'coverage/*.out'
          flags: unittests
          fail_ci_if_error: true
